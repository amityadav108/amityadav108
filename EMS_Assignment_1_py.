{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/amityadav108/amityadav108/blob/main/EMS_Assignment_1_py.\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d8d97e27-acc9-419e-96ca-bdf33d0b0af1",
      "metadata": {
        "id": "d8d97e27-acc9-419e-96ca-bdf33d0b0af1"
      },
      "source": [
        "# Employee Management system (Assignment)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1b999bb5-eccc-43c4-98bb-326e8e9c3a89",
      "metadata": {
        "id": "1b999bb5-eccc-43c4-98bb-326e8e9c3a89",
        "outputId": "37be769c-5c1f-4089-f720-7145479c1811"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            " All Employee Records: \n",
            "\n",
            " ID: 101: Name: Amit, Age: 25, Department: IT, Salary: 60000\n",
            " ID: 102: Name: Madhu, Age: 23, Department: HR, Salary: 50000\n",
            " ID: 103: Name: Mukesh, Age: 27, Department: Sales, Salary: 55000\n",
            " ID: 104: Name: Priya, Age: 24, Department: Finance, Salary: 45000\n",
            " ID: 105: Name: Anjali, Age: 24, Department: Marketing, Salary: 50000\n"
          ]
        }
      ],
      "source": [
        "# Step-1\n",
        "## Sample Data of Employee\n",
        "\n",
        "employees = {\n",
        "            101: {\"name\": \"Amit\", \"age\": 25, \"department\": \"IT\", \"salary\": 60000},\n",
        "            102: {\"name\": \"Madhu\", \"age\": 23, \"department\": \"HR\", \"salary\": 50000},\n",
        "            103: {\"name\": \"Mukesh\", \"age\": 27, \"department\": \"Sales\", \"salary\": 55000},\n",
        "            104: {\"name\": \"Priya\", \"age\": 24, \"department\": \"Finance\", \"salary\": 45000},\n",
        "            105: {\"name\": \"Anjali\", \"age\": 24, \"department\": \"Marketing\", \"salary\": 50000}\n",
        "}\n",
        "\n",
        "# Display empployee (for testing)\n",
        "\n",
        "def display_all_employees():\n",
        "    print(\"\\n All Employee Records: \\n\")\n",
        "    for emp_id, info in employees.items():\n",
        "        print(f\" ID: {emp_id}: Name: {info['name']}, Age: {info['age']}, Department: {info['department']}, Salary: {info['salary']}\")\n",
        "\n",
        "# testing\n",
        "\n",
        "display_all_employees()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3d93cb32-b00a-4e5f-9aeb-ac62bbceb5df",
      "metadata": {
        "id": "3d93cb32-b00a-4e5f-9aeb-ac62bbceb5df"
      },
      "outputs": [],
      "source": [
        "# Step -2\n",
        "## Main Menu\n",
        "\n",
        "def main_menu():\n",
        "    while True:\n",
        "        print(\"----- Employee Management System -----\")\n",
        "        print(\"1. Add Employees\")\n",
        "        print(\"2. View All Employees\")\n",
        "        print(\"3. Search for Employee\")\n",
        "        print(\"4. Exit\")\n",
        "\n",
        "        choice = input(\"Enter your choice(1-4): \")\n",
        "\n",
        "        if choice == '1':\n",
        "            add_employee()\n",
        "        elif choice == '2':\n",
        "            view_employee()\n",
        "        elif choice == '3':\n",
        "            search_employee()\n",
        "        elif choice == '4':\n",
        "            print(\"\\n Thank you for using the Employee Management System. \\n\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Invalid Choice. please enter the number between 1 to 4. \\n\")\n",
        ""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5807dc34-7a4b-413d-85aa-e492f59bd29d",
      "metadata": {
        "id": "5807dc34-7a4b-413d-85aa-e492f59bd29d"
      },
      "outputs": [],
      "source": [
        "# Step-3\n",
        "## Add Employee Functionality\n",
        "\n",
        "def add_employee():\n",
        "    try:\n",
        "        emp_id = int(input(\"Enter the Employee ID: \"))\n",
        "        if emp_id in employees:\n",
        "            print(\"Employee ID already exists.\")\n",
        "            return\n",
        "        name = input(\"Enter Name: \")\n",
        "        age = int(input(\"Enter the Age: \"))\n",
        "        department = input(\"Enter the Department: \")\n",
        "        salary = float(input(\"Enter the salary: \"))\n",
        "\n",
        "        employees[emp_id] = {'name': name, 'age': age, 'department': department, 'salary': salary}\n",
        "        print(\"Employee  added successfully!\")\n",
        "\n",
        "    except valueError:\n",
        "        print(\"Invalid Input. Please enter correct data types.\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1ba91482-0943-4dfa-9ace-4f261ee5e267",
      "metadata": {
        "id": "1ba91482-0943-4dfa-9ace-4f261ee5e267"
      },
      "outputs": [],
      "source": [
        "# Step-4\n",
        "## View all Employee\n",
        "\n",
        "def view_all_employee():\n",
        "    if not employee:\n",
        "        print(\"No employee available. \\n\")\n",
        "        return\n",
        "    print(\"\\n All Employee Records: \\n\")\n",
        "    for emp_id, info in employees.items():\n",
        "        print(f\"ID: {emp_id}, Name: {info['name']}, Age: {info['age']}, Department: {info['department']}, Salary: {info['salary']}\")\n",
        "\n",
        "\n",
        ""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "fb9800ef-dbfd-438f-95f5-0c42ce4310b6",
      "metadata": {
        "id": "fb9800ef-dbfd-438f-95f5-0c42ce4310b6"
      },
      "outputs": [],
      "source": [
        "# Step-5\n",
        "## Search Employee\n",
        "\n",
        "def search_employee():\n",
        "    try:\n",
        "        emp_id = int(input(\"Enter Employee ID to search: \"))\n",
        "        if emp_id in employees:\n",
        "            info = employees[emp_id]\n",
        "            print(f\"Found - ID: {emp_id}, Name : {info['name']}, Age: {info['age']}, Department: {info['department']}, Salary: {info['salary']} \")\n",
        "        else:\n",
        "            print(\"Employee Not Found.\")\n",
        "\n",
        "    except ValueError:\n",
        "        print(\"Invalid Input. Please enter a valid ID.\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2879c57e-45f5-48d4-af00-1416abd5278c",
      "metadata": {
        "id": "2879c57e-45f5-48d4-af00-1416abd5278c",
        "outputId": "7a740af0-7b3f-4e55-8421-5f3a999e4d42"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "----- Employee Management System -----\n",
            "1. Add Employees\n",
            "2. View All Employees\n",
            "3. Search for Employee\n",
            "4. Exit\n"
          ]
        },
        {
          "name": "stdin",
          "output_type": "stream",
          "text": [
            "Enter your choice(1-4):  1\n",
            "Enter the Employee ID:  101\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Employee ID already exists.\n",
            "----- Employee Management System -----\n",
            "1. Add Employees\n",
            "2. View All Employees\n",
            "3. Search for Employee\n",
            "4. Exit\n"
          ]
        },
        {
          "name": "stdin",
          "output_type": "stream",
          "text": [
            "Enter your choice(1-4):  1\n",
            "Enter the Employee ID:  106\n",
            "Enter Name:  Shivam\n",
            "Enter the Age:  23\n",
            "Enter the Department:  Production\n",
            "Enter the salary:  40000\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Employee  added successfully!\n",
            "----- Employee Management System -----\n",
            "1. Add Employees\n",
            "2. View All Employees\n",
            "3. Search for Employee\n",
            "4. Exit\n"
          ]
        }
      ],
      "source": [
        "Ste\n",
        "main_menu()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5935e5b0-438c-427d-9351-083251cd57ac",
      "metadata": {
        "id": "5935e5b0-438c-427d-9351-083251cd57ac"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python [conda env:base] *",
      "language": "python",
      "name": "conda-base-py"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.7"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}